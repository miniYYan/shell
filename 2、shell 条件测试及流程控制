1、Shell test 命令
（1）数值测试
    参数  说明
    -eq   等于则为真
    -ne   不等于则为真
    -gt   大于则为真
    -ge   大于等于则为真
    -lt   小于则为真
    -le   小于等于则为真

    备注：代码中的 [] 执行基本的算数运算

（2）字符串测试
    
    参数        说明
    =           等于则为真
    !=          不相等则为真
    -z 字符串   字符串的长度为零则为真
    -n 字符串   字符串的长度不为零则为真

（3）文件测试
    参数       说明
    -e 文件名  如果文件存在则为真
    -r 文件名  如果文件存在且可读则为真
    -w 文件名  如果文件存在且可写则为真
    -x 文件名  如果文件存在且可执行则为真
    -s 文件名  如果文件存在且至少有一个字符则为真
    -d 文件名  如果文件存在且为目录则为真
    -f 文件名  如果文件存在且为普通文件则为真
    -c 文件名  如果文件存在且为字符型特殊文件则为真
    -b 文件名  如果文件存在且为块特殊文件则为真

（4）多重条件判断
    测试选项        作用
    判断1 -a 判断2  逻辑与，判断1和判断2都成立，最终的结果才为真
    判断1 -o 判断2  逻辑与，判断1和判断2有一个成立，最终的结果就为真
    ! 判断    逻辑非，是原始的判断式取反

2、条件测试

（1）单分支if语句
    if [ 条件判断式 ];then
        程序
    fi
    或

    if [ 条件判断式 ]
        then
            程序
    fi

    注意：
    if语句使用fi结尾
    [ 条件判断式 ]就是使用test命令判断，所以中括号和条件判断式之间必须有空格
    then后面跟符合条件之后执行的程序，可以放在[]之后，用“;”分隔。也可以换行写入，就不需要“;”了。

（2）双分支if语句
    if [ 条件判断式 ]
        then
            条件成立时，执行的程序
        else
            条件不成立时，执行的另一个程序
    fi

（3）多分支if语句
    # 结束使用
    exit 返回值
    例如:exit 1
    使用$？可以查看脚本的返回值

    if [ 条件判断式1 ]
        then
            当条件判断式1成立时，执行程序1
    elif [ 条件判断式2 ]
        then
            当条件判断式2成立时，执行程序2
    ……
    else
        当所有条件都不成立时，最后执行此程序
    fi

（4）case语句
    case $变量名 in
        "值1")
            如果变量的值等于值1，则执行程序1
            ;;
        "值2")
            如果变量的值等于值1，则执行程序1
            ;;
        ……
        *)
            如果变量的值都不是以上的值，则执行此程序
            ;;
    esac

（5）for循环
    语法一
    for 变量 in 值1 值2 值3 …
    do
        程序
    done

    语法二
    for((初始值;循环控制条件;变量变化))
    do
        程序
    done


（6）while循环
    while [条件判断式]
        do
            程序
        done    

（7）until循环
    until循环，只要条件判断式不成立则进行循环，并执行循环程序。一旦循环条件成立，则终止循环。

    until [条件判断式]
        do
            程序
        done